[
  {
    "objectID": "posts/DH140FinalProjectBlog.html",
    "href": "posts/DH140FinalProjectBlog.html",
    "title": "myblog",
    "section": "",
    "text": "---\ntitle: \"Blog Post\"\ndescription: \"Final Assignment 2\"\nauthor: \"Angel Coronado\"\ndate: \"03/12/2023\"\ndate-modified: \"03/12/2023\"\n---\n\nSyntaxError: invalid syntax (1006989908.py, line 1)"
  },
  {
    "objectID": "posts/DH140FinalProjectBlog.html#introduction",
    "href": "posts/DH140FinalProjectBlog.html#introduction",
    "title": "myblog",
    "section": "Introduction",
    "text": "Introduction\n\nMy Dataset:\nIn 2022, the Sam Donald released a data set that archived the information on Astronauts from multiple organizations and included data on various astronauts’ occupation, mission hours, military status and other personal information. Note that this data is only updated up until 2020. This data set can be accessed here: * https://corgis-edu.github.io/corgis/python/astronauts/\n\n\nMotivation:\nAs an Aerospace Engineering major with an emphasis with Astronautics I have studied various space systems and had to do analysis on many systems that go into space. I find this set interesting as it connects to the concepts I’ve learned in my major courses.\n\n\nQuestions:\nIn this project I will attempt to answer the following questions: * What country has the most mission time? * What is the average year of age of astronauts during their mission? * How many astronauts had extravehicular activities (EVAs)? What is the average amount they spent doing EVAs? * What shuttles were used the most?"
  },
  {
    "objectID": "posts/DH140FinalProjectBlog.html#data-exploration",
    "href": "posts/DH140FinalProjectBlog.html#data-exploration",
    "title": "myblog",
    "section": "Data Exploration",
    "text": "Data Exploration\n\nInteresting Statistics\nIn the data set I found the following statistics to be of interest: * In the dataset, all astronauts were military connected * The statistics for the mission time were as follows: * Mean: 1052.02 * Median: 261.00 * Mode: 283.00 * 10% Trimmed Mean: 675.58 * This indicates an outlier in th mission time that raised the mean significantly * The EVA time were as follows: * Mean: 3.67 * Median: 0.00 * Mode: 0.00 * 10% Trimmed Mean: 1.93 * This again indicates that there were very few astronauts that performed EVAs and the mean was raised by an outlier\n\n\nData Visualizations\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib as plt\n\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\ndef pdcorgis(a):\n    dataset_name = a.lower()\n    dataset_name = dataset_name.replace(' ', '_')\n    data_url = f\"https://corgis-edu.github.io/corgis/csv/{dataset_name}/\"\n    \n    response = requests.get(data_url)\n    soup = BeautifulSoup(response.content, \"html.parser\")\n    \n    for i in soup.find_all(\"a\"):\n        if i.has_attr(\"download\"):\n            csv_file = i[\"href\"]\n            break\n    \n    csv_url = f\"https://corgis-edu.github.io/corgis/csv/{dataset_name}/{csv_file}\"\n    df = pd.read_csv(csv_url)\n    \n    return df\n\n\nastronauts_df = pdcorgis(\"Astronauts\")\nastronauts_df.sample()\n\n\n\n\n\n  \n    \n      \n      Profile.Astronaut Numbers.Overall\n      Profile.Astronaut Numbers.Nationwide\n      Profile.Name\n      Profile.Gender\n      Profile.Birth Year\n      Profile.Nationality\n      Profile.Military\n      Profile.Selection.Group\n      Profile.Selection.Year\n      Profile.Lifetime Statistics.Mission count\n      Mission.Role\n      Mission.Year\n      Mission.Name\n      Mission.Vechicles.Ascent\n      Mission.Vechicles.Orbit\n      Mission.Vechicles.Decent\n      Mission.Durations.Mission duration\n      Profile.Lifetime Statistics.Mission duration\n      Mission.Durations.EVA duration\n      Profile.Lifetime Statistics.EVA duration\n    \n  \n  \n    \n      520\n      234\n      143\n      Melnick, Bruce E.\n      male\n      1949\n      U.S.\n      True\n      NASA- 13\n      1987\n      2\n      MSP\n      1992\n      STS-49\n      STS-49\n      STS-49\n      STS-49\n      213.0\n      311.0\n      0.0\n      0.0\n    \n  \n\n\n\n\n\nimport scipy.stats as stats\n# Set the percentage of data to trim\ntrim_percent = 10\n\n# Loop through each column in the DataFrame\nfor column in astronauts_df.columns:\n\n    # Check if the column is numeric\n    if pd.api.types.is_numeric_dtype(astronauts_df[column]):\n\n        # Compute the mean, median, mode, and trimmed mean of the column\n        column_mean = astronauts_df[column].mean()\n        column_median = astronauts_df[column].median()\n        column_mode = stats.mode(astronauts_df[column])[0][0]\n        column_trimmed_mean = stats.trim_mean(astronauts_df[column], trim_percent / 100)\n\n        # Print the results for the column\n        print(f\"Column: {column}\")\n        print(f\"\\tMean: {column_mean:.2f}\")\n        print(f\"\\tMedian: {column_median:.2f}\")\n        print(f\"\\tMode: {column_mode:.2f}\")\n        print(f\"\\t{trim_percent}% Trimmed Mean: {column_trimmed_mean:.2f}\")\n\nColumn: Profile.Astronaut Numbers.Overall\n    Mean: 273.45\n    Median: 277.00\n    Mode: 192.00\n    10% Trimmed Mean: 272.81\nColumn: Profile.Astronaut Numbers.Nationwide\n    Mean: 128.32\n    Median: 110.00\n    Mode: 1.00\n    10% Trimmed Mean: 121.52\nColumn: Profile.Birth Year\n    Mean: 1951.66\n    Median: 1952.00\n    Mode: 1956.00\n    10% Trimmed Mean: 1952.02\nColumn: Profile.Military\n    Mean: 1.00\n    Median: 1.00\n    Mode: 1.00\n    10% Trimmed Mean: 1.00\nColumn: Profile.Selection.Year\n    Mean: 1985.50\n    Median: 1987.00\n    Mode: 1978.00\n    10% Trimmed Mean: 1985.95\nColumn: Profile.Lifetime Statistics.Mission count\n    Mean: 2.99\n    Median: 3.00\n    Mode: 2.00\n    10% Trimmed Mean: 2.92\nColumn: Mission.Year\n    Mean: 1994.54\n    Median: 1995.00\n    Mode: 1985.00\n    10% Trimmed Mean: 1995.19\nColumn: Mission.Durations.Mission duration\n    Mean: 1052.02\n    Median: 261.00\n    Mode: 283.00\n    10% Trimmed Mean: 675.58\nColumn: Profile.Lifetime Statistics.Mission duration\n    Mean: 2976.40\n    Median: 938.00\n    Mode: 565.00\n    10% Trimmed Mean: 2013.20\nColumn: Mission.Durations.EVA duration\n    Mean: 3.67\n    Median: 0.00\n    Mode: 0.00\n    10% Trimmed Mean: 1.93\nColumn: Profile.Lifetime Statistics.EVA duration\n    Mean: 10.80\n    Median: 0.00\n    Mode: 0.00\n    10% Trimmed Mean: 7.43\n\n\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: DeprecationWarning: Support for non-numeric arrays has been deprecated as of SciPy 1.9.0 and will be removed in 1.11.0. `pandas.DataFrame.mode` can be used instead, see https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mode.html.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n/tmp/ipykernel_857/3642324204.py:14: FutureWarning: Unlike other reduction functions (e.g. `skew`, `kurtosis`), the default behavior of `mode` typically preserves the axis it acts along. In SciPy 1.11.0, this behavior will change: the default value of `keepdims` will become False, the `axis` over which the statistic is taken will be eliminated, and the value None will no longer be accepted. Set `keepdims` to True or False to avoid this warning.\n  column_mode = stats.mode(astronauts_df[column])[0][0]\n\n\n\n# Calculate the number of astronauts by gender\ngender_counts = astronauts_df['Profile.Gender'].value_counts()\n\n# Create a pie chart showing the gender distribution\nplt.pie(gender_counts.values, labels=gender_counts.index, autopct='%1.1f%%')\nplt.title('Astronauts by Gender')\nplt.show()\n\n\n\n\nHere, we see an overwhelming majority of the astronauts are male.\n\n# Create a pivot table to count the number of astronauts by nationality and gender\nnationality_gender_counts = pd.pivot_table(astronauts_df, values='Profile.Name', index='Profile.Nationality', columns='Profile.Gender', aggfunc='count', fill_value=0)\n\n# Get the top ten nationalities\ntop_nationalities = nationality_gender_counts.sum(axis=1).sort_values(ascending=False).head(10)\n\n# Get the data for the top ten nationalities\ntop_nationality_data = nationality_gender_counts.loc[top_nationalities.index]\n\n# Create a stacked bar chart showing the gender distribution by nationality\ntop_nationality_data.plot(kind='bar', stacked=True)\nplt.title('Gender Distribution by Nationality (Top 10)')\nplt.xlabel('Nationality')\nplt.ylabel('Number of Astronauts')\nplt.legend(title='Gender')\n\nplt.show()\n\n\n\n\n\nThe USA has a clear lead when it comes to the number of astronauts that have been sent to space and have also been the country to send the most female astronauts to space.\n\n# Group the data by country and calculate the total mission time\ncountry_group = astronauts_df.groupby('Profile.Nationality')['Profile.Lifetime Statistics.Mission duration'].sum()\n\n# Sort the data in descending order based on the total mission time\ncountry_group = country_group.sort_values(ascending=False)\n\n# Select the top ten countries\ntop_ten_countries = country_group.head(10)\n\n# Create a bar graph\ntop_ten_countries.plot(kind='bar')\n\n# Set x-axis label\nplt.xlabel('Country')\n\n# Set y-axis label\nplt.ylabel('Total Mission Time (days)')\n\n# Show the plot\nplt.show()\n\n\n\n\nRussia/USSR has a decisive lead over the US in terms of time spent on mission in space, trailed by the US with the two leaving all other countries far behind.\n\nimport datetime as dt\n# Convert birth year to datetime and calculate the age of the astronaut at the time of their mission\nastronauts_df['Mission.Year'] = pd.to_datetime(astronauts_df['Mission.Year'], format='%Y')\nastronauts_df['Profile.Birth Year'] = pd.to_datetime(astronauts_df['Profile.Birth Year'], format='%Y')\nastronauts_df['age_at_mission'] = ((astronauts_df['Mission.Year'] - astronauts_df['Profile.Birth Year']).dt.days / 365).astype(int)\n\n# Create a histogram showing the distribution of astronaut ages during their mission year\nplt.hist(astronauts_df['age_at_mission'], bins=20)\nplt.title('Age Distribution of Astronauts During Mission Year')\nplt.xlabel('Age')\nplt.ylabel('Count of Astronauts')\n\nplt.show()\n\n\n\n\nIn the histogram, we see the ages of astronauts at the time of their mission. There is a peak at both 40 and 45 and very few that are in their 30s, the range I originally expected.\n\n# Create a scatter plot of mission year against mission duration\nplt.scatter(astronauts_df['Mission.Year'], astronauts_df['Mission.Durations.Mission duration'])\n\n# Set the x-axis label\nplt.xlabel('Mission Year')\n\n# Set the y-axis label\nplt.ylabel('Mission Duration (days)')\n\n# Set the title of the plot\nplt.title('Mission Year vs. Mission Duration')\n\n# Display the plot\nplt.show()\n\n\n\n\nAs technology progresses, as does the length of the mission, while not a significant jump on the lower end there is a clear trend upwards and there are higher mission durations that wre not possible before 1970.\n\n# Get the top ten most used shuttles for ascent and descent\ntop_shuttles_ascent = astronauts_df['Mission.Vechicles.Ascent'].value_counts().head(10)\ntop_shuttles_descent = astronauts_df['Mission.Vechicles.Decent'].value_counts().head(10)\n\n# Create a figure with two subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))\n\n# Plot the top ten most used shuttles for ascent in the first subplot\ntop_shuttles_ascent.plot(kind='bar', ax=ax1)\nax1.set_xlabel('Shuttle Name')\nax1.set_ylabel('Number of Uses')\nax1.set_title('Top 10 Most Used Shuttles for Ascent')\n\n# Plot the top ten most used shuttles for descent in the second subplot\ntop_shuttles_descent.plot(kind='bar', ax=ax2)\nax2.set_xlabel('Shuttle Name')\nax2.set_ylabel('Number of Uses')\nax2.set_title('Top 10 Most Used Shuttles for Descent')\n\n# Adjust the spacing between the subplots\nplt.subplots_adjust(wspace=0.4)\n\n# Display the plot\nplt.show()\n\n\n\n\nHere, the most used shuttles for both ascent and descent are shown. STS-42 is the most used shuttle, being used the most for ascensions and descensions.\n\n# Count the number of astronauts in each selection group\nselection_counts = astronauts_df['Profile.Selection.Group'].value_counts()\n\n# Select the top 10 selection groups\ntop_10_selection_counts = selection_counts[:10]\n\n# Plot the top 10 selection groups in a bar graph\nplt.figure(figsize=(12, 6))\nplt.bar(top_10_selection_counts.index, top_10_selection_counts.values)\nplt.xlabel('Selection Group')\nplt.ylabel('Number of Astronauts')\nplt.title('Top 10 Selection Groups with the Most Astronauts')\n\n# Display the plot\nplt.show()\n\n\n\n\nThese selection gruops are the way that NASA goes about graduating astronauts through their training, with NASA-16 having the most and graduating in 1996.\n\nastronauts_df['Mission.Role'] = astronauts_df['Mission.Role'].str.lower()\n# Group by mission role and calculate mean EVA duration\nrole_eva = astronauts_df.groupby('Mission.Role')['Mission.Durations.EVA duration'].mean()\n\n# Sort values in descending order\nrole_eva = role_eva.sort_values(ascending=False)\n\n# Create bar plot\nplt.bar(role_eva.index, role_eva.values)\n\n# Set title and labels\nplt.title('Average EVA Duration by Mission Role')\nplt.xlabel('Mission Role')\nplt.ylabel('EVA Duration (hours)')\n\n# Rotate x-tick labels by 90 degrees\nplt.xticks(rotation=90)\n\n# Display plot\nplt.show()\n\n\n\n\nUnsurprisingly, we see that the flight engineer role has the most average EVA time and that there are a majority of roles that do not ever have any EVA time.\n\n# Select only rows where EVA duration is greater than 0\ndf = astronauts_df.query(\"`Mission.Durations.EVA duration` > 0\")\n\n# Create scatter plot\nplt.scatter(df['Mission.Year'], df['Mission.Durations.EVA duration'])\n\n# Set x-axis label\nplt.xlabel('Mission Year')\n\n# Set y-axis label\nplt.ylabel('EVA Duration')\n\n# Show the plot\nplt.show()\n\n\n\n\nHere we see a trend of more EVA time as technology advances. However we do see an outlier around 1995 that skews the data. (NOTE: This scatter plot excludes EVA counts of 0)"
  },
  {
    "objectID": "posts/DH140FinalProjectBlog.html#analysis",
    "href": "posts/DH140FinalProjectBlog.html#analysis",
    "title": "myblog",
    "section": "Analysis",
    "text": "Analysis\nThrough this analysis I have been able to answer the following questions: * What country has the most mission time? * Despite not having the most astronauts sent to space, the USSR/Russia has a significantly higher amount of time spent on mission * What is the average year of age of astronauts during their mission? * This histogram showed that the average age of astronauts during their mission was around 40 years of age * What is the average amount astronauts spent doing EVAs? What roles had the most EVA? * The average was 3.67 hours of EVA with flight engineers having the most EVA time out of all roles * What shuttles were used the most? * The most used shuttle was the STS-42 being used for both ascent and descent eight times"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "DH140 Final Project: Astronauts\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]